apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "barotrauma.fullname" . }}
  labels:
    {{- include "barotrauma.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "barotrauma.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "barotrauma.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "barotrauma.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: barotrauma-27015
              containerPort: 27015
              protocol: UDP
            - name: barotrauma-27016
              containerPort: 27016
              protocol: UDP
          volumeMounts:
          - name: datadir
            mountPath: "/home/steam/.local/share/Daedalic Entertainment GmbH/Barotrauma/Multiplayer"
          volumes:
          - name: datadir
          {{- if .Values.persistence.dataDir.enabled }}
            persistentVolumeClaim:
            {{- if .Values.persistence.dataDir.existingClaim }}
              claimName: {{ .Values.persistence.dataDir.existingClaim }}
            {{- else }}
              claimName: {{ template "minecraft.fullname" . }}-datadir
            {{- end }}
          {{- else }}
              emptyDir: {}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
